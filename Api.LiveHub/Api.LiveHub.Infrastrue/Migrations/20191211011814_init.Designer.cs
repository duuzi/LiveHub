// <auto-generated />
using System;
using Api.LiveHub.Infrastrue.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.LiveHub.Infrastrue.Migrations
{
    [DbContext(typeof(BusinessDbContext))]
    [Migration("20191211011814_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.LiveHub.Domain.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AccountName")
                        .HasColumnName("account_name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountNo")
                        .HasColumnName("account_no")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnName("avatar")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DepartmentNo")
                        .HasColumnName("department")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MailAddress")
                        .HasColumnName("mail_address")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("NickName")
                        .HasColumnName("nick_name")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("OpenId")
                        .HasColumnName("open_id")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("lc_account");
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.Business", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AMorPM")
                        .HasColumnName("am_pm")
                        .HasColumnType("int");

                    b.Property<long>("AccountId")
                        .HasColumnName("account_id")
                        .HasColumnType("bigint");

                    b.Property<int>("BusinessStatus")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<int>("BusinessType")
                        .HasColumnName("business_type")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("From")
                        .HasColumnName("from")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("SignDate")
                        .HasColumnName("sign_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("To")
                        .HasColumnName("to")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("lc_business");
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.GameScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AccountId")
                        .HasColumnName("account_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Score")
                        .HasColumnName("score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("lh_game_score");
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .HasColumnName("role_name")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("lc_role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleName = "助理"
                        },
                        new
                        {
                            Id = 2L,
                            RoleName = "普通用户"
                        });
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.SignIn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AccountId")
                        .HasColumnName("account_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SignDate")
                        .HasColumnName("sign_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SignText")
                        .HasColumnName("sign_text")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("lh_sign_in");
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.ToDoList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AccountId")
                        .HasColumnName("account_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Checked")
                        .HasColumnName("checked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(64)");

                    b.Property<int?>("Order")
                        .HasColumnName("order")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<int>("ToDoType")
                        .HasColumnName("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("lh_todolist");
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("lc_user_role");
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.Business", b =>
                {
                    b.HasOne("Api.LiveHub.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.GameScore", b =>
                {
                    b.HasOne("Api.LiveHub.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.SignIn", b =>
                {
                    b.HasOne("Api.LiveHub.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.ToDoList", b =>
                {
                    b.HasOne("Api.LiveHub.Domain.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.LiveHub.Domain.Models.UserRole", b =>
                {
                    b.HasOne("Api.LiveHub.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.LiveHub.Domain.Models.Account", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
